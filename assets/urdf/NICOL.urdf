<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/jan-gerrit/catkin_ws/src/nias/nias_description/urdf/NICOL_robot_generic.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!-- This file is used to create parts of the NICOL robot in an own namespace. -->
<!-- Every defined NICOL macro can be instanciated by the xacro "macro:call" functionality. -->
<!-- For the NICOL simulation, the robot base, the head and the robot frame can reside in an -->
<!-- own robot description as well as the right and the left limb can have an own robot description. -->
<!-- This file is also used to create a single NICOL robot model urdf file, -->
<!-- having all joints in the same namespace. Primarily used to create -->
<!-- a urdf for applications that require a whole in one robot description. -->
<!-- Depending on the arguments set, all NICOL children can be created by  -->
<!-- calling this file several times from a launchfile.  -->
<!-- (eg. <param name="robot_description" command="xacro 'filename' with_head:=true other_args:=..." />). -->
<!-- The respective macro args have the caret (^) to substitute args by properties defined in outer scope.-->
<!-- All properties below do configure the macros called. So, no explicit parametrization of the macro is required.  -->
<!-- The configuration files for the macros contain all relevant parameter to create the NICOL robot. -->
<!-- In order to place a base joint in the right pose, the relevant base joint parameters are accessed (${ $(arg name) }) by the -->
<!-- launchfile arguments passed to this script. See "common_omp_config.xacro", "common_rh8d_config.xacro" -->
<!-- and "common_robot_base_config.xacro" for those parameters. -->
<!-- The following args are set dynamically and define the robot description. -->
<!-- Required args: -->
<!--     use_robot_name:        Global name for the robot description param. -->
<!--     robot_macro:           The macro to call. All NICOL parts are instanciated by macros.  -->
<!--                            Possible macros are: [robot_base_macro, omp_unit_macro, rh8d_unit_macro]. -->
<!--                            Also used to conditionally define xacro properties for specific robot macros -->
<!--                            at a global level. Eg. if "robot_macro" equals 'robot_base_macro' all properties -->
<!--                            used by the robot_base_macro and its children are defined. -->
<!--     use_high_res_mesh:     Use optional meshes with higher resolution. May lower the performance. -->
<!--     visualize_sensor:      Whether to visualize the laser and camera rays for debugging.-->
<!--     force_all_meshes_same: Forces the same meshes to take for collision as for visual geometry for all links. -->
<!--                            Sometimes the simplified collision geometry is not desired and we want the same detailed -->
<!--                            geometry for collision as for visual link elements. -->
<!--     robot_namespace:       The fully qualified name identifier of the robot description. Used to initiate the Gazebo hardware sim plugin. -->
<!--                            Eg. "namespace"/"use_robot_name". -->
<!--     base_joint_idx:        Accesses config file by ${}. The name of the base joint, used to append the respective (macro) link to. -->
<!--                            A valid base joint identifier from the respective macro configuration file. -->
<!--     base_joint_xyz:        Accesses config file by ${}. The position of the base joint, used to append the respective (macro) link to. -->
<!--                            A valid base joint position from the respective macro configuration file. -->
<!--     base_joint_rpy:        Accesses config file by ${}. The orientation of the base joint, used to append the respective (macro) link to. -->
<!--                            A valid base joint orientation from the respective macro configuration file. -->
<!--     base_joint_child:      Accesses config file by ${}. The name of the (macro) link to append to the base joint. -->
<!--                            A valid base joint child identifier from the respective macro configuration file. -->
<!--     with_rh8d:             Whether an RH8D should be appended to each omp joint6. -->
<!--                            If false, the kinematic chain ends with <r, l>_link6. Left out, if false. -->
<!--     body_side_prefix:      Only required for the "omp_unit_macro." This argument decides the prefix for the Gazebo references. -->
<!--                            for a right omp and rh8d unit Furthermore, this argument is prependet to each link to achieve a unique link name in the tf-tree. -->
<!--     with_head:             Only required for the "robot_base_macro". -->
<!--                            Whether the head to append. The head is left out, if false. -->
<!--     with_frame:            Only required for the "robot_base_macro". -->
<!--                            Whether the robot frame to append. The frame is left out, if false -->
<!--     with_right_omp:        Only required for the "robot_base_macro" if no different namespaces are used. -->
<!--                            Whether a right Open Manipulator P instance to append. Left out, if false. -->
<!--     with_left_omp:         Only required for the "robot_base_macro" if no different namespaces are used. -->
<!--                            Whether a left Open Manipulator P instance to append. Left out, if false. -->
<!--     r_body_side_prefix:    Only required for the "robot_base_macro" if no different namespaces are used. -->
<!--                            This argument decides the prefix for the Gazebo references for a right omp and rh8d unit. -->
<!--                            Furthermore, this argument is prependet to each link to achieve a unique link name in the tf-tree. -->
<!--     l_body_side_prefix:    Only required for the "robot_base_macro" if no different namespaces are used. -->
<!--                            This argument decides the prefix for the Gazebo references for a left omp and rh8d unit. -->
<!--                            Furthermore, this argument is prependet to each link to achieve a unique link name in the tf-tree. -->
<!--     r_joint_export_prefix: Only required for the "robot_base_macro" if no different namespaces are used. -->
<!--                            Prepended to the omp and rh8d joints to distinguish joints  -->
<!--                            from the left counterparts (to achieve a unique joint naming). -->
<!--     l_joint_export_prefix: Only required for the "robot_base_macro" if no different namespaces are used. -->
<!--                            Prepended to the omp and rh8d joints to distinguish joints -->
<!--                            from the right counterparts (to achieve a unique joint naming). -->
<!--    realsense_camera_name:  Only required for the "robot_base_macro". The name for the Realsense top camera link name -->
<!--                            appearing in the tf-tree and used as camera topic namespace. -->
<!--    enable_pointcloud:      Only required for the "robot_base_macro". Whether to activate Realsense pointcloud topic. -->
<!--    width:                  Only required for the "robot_base_macro". Eye cam image width. -->
<!--    height:                 Only required for the "robot_base_macro". Eye cam image height. -->
<!--    left_camera_name:       Only required for the "robot_base_macro". The name for the left eye camera link name  -->
<!--                            appearing in the tf-tree and used as camera topic namespace. -->
<!--    right_camera_name:      Only required for the "robot_base_macro". The name for the right eye camera link name -->
<!--                            appearing in the tf-tree and used as camera topic namespace. -->
<!--    fps:                    Only required for the "robot_base_macro". The publish rate of the eye image messages. -->
<!--    use_effort_controllers: Uses the effort_controllers/joint_position_controller ros plugin (receives joint position command,
                                sends joint effort) for PID motor control. If false, the position_controllers/joint_position_controller 
                                plugin is used (internally forwards the joint position command).-->
<robot name="NICOL">
  <!-- finger infixes -->
  <!-- finger indices -->
  <!-- palm indices -->
  <!-- link names: further differentiaton by index and infix -->
  <!-- mesh files -->
  <!-- link collision geometry values  -->
  <!-- joint specifications -->
  <!-- inertial constants represented by macros -->
  <!-- forearm old inertial -->
  <!-- <xacro:macro name="INERTIAL_FOREARM_MACRO"> 
        <origin xyz="-0.000004 0.00267674 0.0805699" rpy="0.02118572 0.0001173 0.00029319"/>
        <mass value="0.77750886"/>
        <inertia ixx="0.00152273" ixy="0.00000005" ixz="0.00000010" iyy="0.00167456" iyz="-0.00002091" izz="0.00068825"/>
    </xacro:macro> -->
  <!-- inertial constants represented by macros -->
  <!-- common tip macro -->
  <!-- thumb macro -->
  <!-- finger macro -->
  <!-- joint indices -->
  <!-- link 6 uses mesh geometry -->
  <!-- link collision geometry values  -->
  <!-- mesh files -->
  <!-- joint specifications -->
  <!-- inertial constants represented by macros -->
  <!-- link names -->
  <!-- joint names -->
  <!-- link collision geometry values  -->
  <!-- mesh files -->
  <!-- colors -->
  <!-- joint specifications -->
  <!-- inertial constants represented by macros -->
  <!-- link collision geometry values  -->
  <!-- mesh files -->
  <!-- colors -->
  <!-- link names -->
  <!-- joint names -->
  <!-- default joint export prefixes -->
  <!-- default link prefixes -->
  <!-- parent and child links of base joint -->
  <!-- joint specifications -->
  <!-- inertial constants represented by macros -->
  <!-- top camera macro -->
  <!-- origin of base link (frame center) in the world -->
  <!-- <xacro:property name="FRAME_ORIGIN"                 value="-1.01 0.01 -1.2"/> -->
  <!-- constants for scaffold collision macros -->
  <!-- link collision geometry values  -->
  <!-- mesh files -->
  <!-- colors -->
  <!-- link names -->
  <!-- joint names -->
  <!-- joint specifications -->
  <!-- inertial constants represented by macros -->
  <material name="profile">
    <color rgba="0.5 0.5 0.5 1.0"/>
  </material>
  <material name="plate">
    <color rgba="0.5 0.5 0.5 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="silver">
    <color rgba="0.8 0.8 0.8 1.0"/>
  </material>
  <material name="rh8d_color">
    <color rgba="0.74902 0.74902 0.74902 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>NICOL</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>
  <!-- World, center of global coordinate system-->
  <link name="world"/>
  <gazebo reference="world"/>
  <!-- NICOL fixed joint -->
  <joint name="joint_base" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.8"/>
    <parent link="world"/>
    <child link="base_link"/>
  </joint>
  <!-- NICOL fixed joint -->
  <gazebo reference="base_link">
    <!-- custom base color -->
    <visual>
      <material>
        <ambient>0.7 0.7 0.7 1.0</ambient>
        <diffuse>0.6 0.6 0.6 1.0</diffuse>
        <specular>0.7 0.7 0.7 1.0</specular>
      </material>
    </visual>
  </gazebo>
  <gazebo reference="camera_holder_link">
    <!-- custom base color -->
    <visual>
      <material>
        <ambient>0.7 0.7 0.7 1.0</ambient>
        <diffuse>0.6 0.6 0.6 1.0</diffuse>
        <specular>0.7 0.7 0.7 1.0</specular>
      </material>
    </visual>
  </gazebo>
  <gazebo reference="camera_link">
    <!-- custom base color -->
    <visual>
      <material>
        <ambient>0.7 0.7 0.7 1.0</ambient>
        <diffuse>0.6 0.6 0.6 1.0</diffuse>
        <specular>0.7 0.7 0.7 1.0</specular>
      </material>
    </visual>
  </gazebo>
  <gazebo reference="frame_link">
    <!-- custom base color -->
    <visual>
      <material>
        <ambient>0.7 0.7 0.7 1.0</ambient>
        <diffuse>0.6 0.6 0.6 1.0</diffuse>
        <specular>0.7 0.7 0.7 1.0</specular>
      </material>
    </visual>
  </gazebo>
  <!-- working plate -->
  <gazebo reference="plate_link">
    <material>Gazebo/White</material>
  </gazebo>
  <!-- NICOL link  -->
  <link name="base_link">
    <inertial>
      <origin rpy="0 -0.0005235988 0" xyz="-0.022 0.0 -0.720"/>
      <mass value="515.106"/>
      <inertia ixx="2.4662489606e01" ixy="4.29e-07" ixz="-8.927336e-03" iyy=" 2.4652408384e01" iyz="1.401e-05" izz="7.601222788"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/robot_frame/holder_with_socket_centered.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="silver"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="-0.0225 0 0.5"/>
      <geometry>
        <!-- drop mesh and use a box with given size arg -->
        <box size="0.045 0.1 1.0"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- robot base -->
  <!-- NICOL fixed joint -->
  <joint name="joint_chest_collision" type="fixed">
    <origin rpy="0 0 0" xyz="0.011 0.0 0.4"/>
    <parent link="base_link"/>
    <child link="chest_collision_link"/>
  </joint>
  <!-- NICOL fixed joint -->
  <link name="chest_collision_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.02 0.1 0.14"/>
      </geometry>
    </collision>
    <!-- visual not desired -->
    <!-- inertial not desired -->
  </link>
  <!-- chest collision -->
  <!-- NICOL fixed joint -->
  <joint name="joint_camera_holder" type="fixed">
    <origin rpy="0 -2.8902652413026098 0" xyz="0.9 0 1.17"/>
    <parent link="base_link"/>
    <child link="camera_holder_link"/>
  </joint>
  <!-- NICOL fixed joint -->
  <material name="aluminum">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>
  <material name="plastic">
    <color rgba="0.1 0.1 0.1 1"/>
  </material>
  <!-- NICOL link  -->
  <link name="camera_holder_link">
    <inertial>
      <origin rpy="0 0.7824311 0" xyz="0.01 0 0.01"/>
      <mass value="0.360"/>
      <inertia ixx="7.521032e-03" ixy="0.0" ixz="-4.2999999999999995e-08" iyy="2.5991e-05" iyz="0.0" izz="7.521032e-03"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/robot_frame/camera_holder_centered.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="silver"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- drop mesh and use a box with given size arg -->
        <box size="0 0 0"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL fixed joint -->
  <joint name="joint_camera" type="fixed">
    <origin rpy="0 -1.5707963267948966 0" xyz="0.035 0 0.04"/>
    <parent link="camera_holder_link"/>
    <child link="camera_link"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- NICOL link  -->
  <link name="camera_link">
    <inertial>
      <origin rpy="0.00119 -0.07569 -0.00766" xyz="-0.01327 0.00168 0.0"/>
      <mass value="0.05443"/>
      <inertia ixx="0.00004" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00004"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/camera/Intel_RealSense_Depth_Camera_D435_centered.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="profile"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- drop mesh and use a box with given size arg -->
        <box size="0 0 0"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- camera body, with origin at bottom screw mount -->
  <joint name="realsense_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.01 0 -0.0115"/>
    <parent link="camera_link"/>
    <child link="realsense_bottom_screw_frame"/>
  </joint>
  <link name="realsense_bottom_screw_frame"/>
  <joint name="realsense_link_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.02 0.0115"/>
    <parent link="realsense_bottom_screw_frame"/>
    <child link="realsense_link"/>
  </joint>
  <link name="realsense_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 -0.02 0"/>
      <geometry>
        <box size="0.02005 0.099 0.023"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 -0.02 0"/>
      <geometry>
        <box size="0.02005 0.099 0.023"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.072"/>
      <!-- The following are not reliable values, and should not be used for modeling -->
      <origin xyz="0 0 0"/>
      <inertia ixx="0.003881243" ixy="0.0" ixz="0.0" iyy="0.000498940" iyz="0.0" izz="0.003879257"/>
    </inertial>
  </link>
  <!-- camera depth joints and links -->
  <joint name="realsense_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="realsense_link"/>
    <child link="realsense_depth_frame"/>
  </joint>
  <link name="realsense_depth_frame"/>
  <joint name="realsense_depth_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="realsense_depth_frame"/>
    <child link="realsense_depth_optical_frame"/>
  </joint>
  <link name="realsense_depth_optical_frame"/>
  <!-- camera left IR joints and links -->
  <joint name="realsense_infra1_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.0 0"/>
    <parent link="realsense_link"/>
    <child link="realsense_infra1_frame"/>
  </joint>
  <link name="realsense_infra1_frame"/>
  <joint name="realsense_infra1_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="realsense_infra1_frame"/>
    <child link="realsense_infra1_optical_frame"/>
  </joint>
  <link name="realsense_infra1_optical_frame"/>
  <!-- camera right IR joints and links -->
  <joint name="realsense_infra2_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 -0.055 0"/>
    <parent link="realsense_link"/>
    <child link="realsense_infra2_frame"/>
  </joint>
  <link name="realsense_infra2_frame"/>
  <joint name="realsense_infra2_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="realsense_infra2_frame"/>
    <child link="realsense_infra2_optical_frame"/>
  </joint>
  <link name="realsense_infra2_optical_frame"/>
  <!-- camera color joints and links -->
  <joint name="realsense_color_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.015 0"/>
    <parent link="realsense_link"/>
    <child link="realsense_color_frame"/>
  </joint>
  <link name="realsense_color_frame"/>
  <joint name="realsense_color_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="realsense_color_frame"/>
    <child link="realsense_color_optical_frame"/>
  </joint>
  <link name="realsense_color_optical_frame"/>
  <!-- link ref -->
  <gazebo reference="realsense_link">
    <material>Gazebo/Grey</material>
    <self_collide>0</self_collide>
    <enable_wind>0</enable_wind>
    <kinematic>0</kinematic>
    <gravity>1</gravity>
    <!--<mu>1</mu>-->
    <mu2>1</mu2>
    <fdir1>0 0 0</fdir1>
    <!--<slip1>0</slip1>
      <slip2>0</slip2>-->
    <kp>1e+13</kp>
    <kd>1</kd>
    <!--<max_vel>0.01</max_vel>
      <min_depth>0</min_depth>-->
    <!-- color cam -->
    <sensor name="realsensecolor" type="camera">
      <camera name="realsense">
        <horizontal_fov>1.2112585008840648</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1080</height>
          <format>RGB_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <visualize>False</visualize>
    </sensor>
    <!-- ired 1 -->
    <sensor name="realsenseired1" type="camera">
      <camera name="realsense">
        <horizontal_fov>1.4870205226991688</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>90</update_rate>
      <visualize>False</visualize>
    </sensor>
    <!-- ired 2 -->
    <sensor name="realsenseired2" type="camera">
      <camera name="realsense">
        <horizontal_fov>1.4870205226991688</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>90</update_rate>
      <visualize>False</visualize>
    </sensor>
    <!-- depth sensor -->
    <sensor name="realsensedepth" type="depth">
      <camera name="realsense">
        <horizontal_fov>1.4870205226991688</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.100</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>90</update_rate>
      <visualize>False</visualize>
    </sensor>
  </gazebo>
  <gazebo>
    <!-- attach plugin to world -->
    <plugin filename="librealsense_gazebo_plugin.so" name="realsense_controller">
      <prefix>realsense</prefix>
      <depthUpdateRate>30.0</depthUpdateRate>
      <colorUpdateRate>30.0</colorUpdateRate>
      <infraredUpdateRate>30.0</infraredUpdateRate>
      <depthTopicName>depth/image_raw</depthTopicName>
      <depthCameraInfoTopicName>depth/camera_info</depthCameraInfoTopicName>
      <colorTopicName>color/image_raw</colorTopicName>
      <colorCameraInfoTopicName>color/camera_info</colorCameraInfoTopicName>
      <infrared1TopicName>infra1/image_raw</infrared1TopicName>
      <infrared1CameraInfoTopicName>infra1/camera_info</infrared1CameraInfoTopicName>
      <infrared2TopicName>infra2/image_raw</infrared2TopicName>
      <infrared2CameraInfoTopicName>infra2/camera_info</infrared2CameraInfoTopicName>
      <colorOpticalframeName>realsense_color_optical_frame</colorOpticalframeName>
      <depthOpticalframeName>realsense_depth_optical_frame</depthOpticalframeName>
      <infrared1OpticalframeName>realsense_infra1_optical_frame</infrared1OpticalframeName>
      <infrared2OpticalframeName>realsense_infra2_optical_frame</infrared2OpticalframeName>
      <rangeMinDepth>0.2</rangeMinDepth>
      <rangeMaxDepth>10.0</rangeMaxDepth>
      <pointCloud>True</pointCloud>
      <pointCloudTopicName>depth/color/points</pointCloudTopicName>
      <pointCloudCutoff>0.25</pointCloudCutoff>
      <pointCloudCutoffMax>9.0</pointCloudCutoffMax>
    </plugin>
  </gazebo>
  <!-- camera -->
  <!-- NICOL fixed joint -->
  <joint name="joint_frame" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="frame_link"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- NICOL link  -->
  <link name="frame_link">
    <inertial>
      <origin rpy="0.16 -0.00034906585 0.0" xyz="0.49976 0.00041 0.14744"/>
      <mass value="160.44921"/>
      <inertia ixx="169.08979" ixy="-0.00367" ixz="-0.02295" iyy="110.93993" iyz="0.07994" izz="109.17499"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/robot_frame/robot_frame_centered.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="silver"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- drop mesh and use a box with given size arg -->
        <box size="0 0 0"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL fixed joint -->
  <joint name="joint_front_left_collision" type="fixed">
    <origin rpy="0 0 0" xyz="0.0225 -0.9775 0.50"/>
    <parent link="frame_link"/>
    <child link="front_left_collision_link"/>
  </joint>
  <!-- NICOL fixed joint -->
  <link name="front_left_collision_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.045 0.045 1.0"/>
      </geometry>
    </collision>
    <!-- visual not desired -->
    <!-- inertial not desired -->
  </link>
  <!-- NICOL fixed joint -->
  <joint name="joint_front_right_collision" type="fixed">
    <origin rpy="0 0 0" xyz="0.0225 0.9775 0.50"/>
    <parent link="frame_link"/>
    <child link="front_right_collision_link"/>
  </joint>
  <!-- NICOL fixed joint -->
  <link name="front_right_collision_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.045 0.045 1.0"/>
      </geometry>
    </collision>
    <!-- visual not desired -->
    <!-- inertial not desired -->
  </link>
  <!-- NICOL fixed joint -->
  <joint name="joint_rear_left_collision" type="fixed">
    <origin rpy="0 0 0" xyz="0.9775 -0.9775 0.50"/>
    <parent link="frame_link"/>
    <child link="rear_left_collision_link"/>
  </joint>
  <!-- NICOL fixed joint -->
  <link name="rear_left_collision_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.045 0.045 1.0"/>
      </geometry>
    </collision>
    <!-- visual not desired -->
    <!-- inertial not desired -->
  </link>
  <!-- NICOL fixed joint -->
  <joint name="joint_rear_right_collision" type="fixed">
    <origin rpy="0 0 0" xyz="0.9775 0.9775 0.50"/>
    <parent link="frame_link"/>
    <child link="rear_right_collision_link"/>
  </joint>
  <!-- NICOL fixed joint -->
  <link name="rear_right_collision_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.045 0.045 1.0"/>
      </geometry>
    </collision>
    <!-- visual not desired -->
    <!-- inertial not desired -->
  </link>
  <!-- NICOL fixed joint -->
  <joint name="joint_front_collision" type="fixed">
    <origin rpy="0 0 0" xyz="0.0225 0.0 0.92"/>
    <parent link="frame_link"/>
    <child link="front_collision_link"/>
  </joint>
  <!-- NICOL fixed joint -->
  <link name="front_collision_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.045 1.91 0.045"/>
      </geometry>
    </collision>
    <!-- visual not desired -->
    <!-- inertial not desired -->
  </link>
  <!-- NICOL fixed joint -->
  <joint name="joint_rear_collision" type="fixed">
    <origin rpy="0 0 0" xyz="0.9775 0.0 0.92"/>
    <parent link="frame_link"/>
    <child link="rear_collision_link"/>
  </joint>
  <!-- NICOL fixed joint -->
  <link name="rear_collision_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.045 1.91 0.045"/>
      </geometry>
    </collision>
    <!-- visual not desired -->
    <!-- inertial not desired -->
  </link>
  <!-- NICOL fixed joint -->
  <joint name="joint_left_collision" type="fixed">
    <origin rpy="0 0 0" xyz="0.5 -0.9775 0.92"/>
    <parent link="frame_link"/>
    <child link="left_collision_link"/>
  </joint>
  <!-- NICOL fixed joint -->
  <link name="left_collision_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.91 0.045 0.045"/>
      </geometry>
    </collision>
    <!-- visual not desired -->
    <!-- inertial not desired -->
  </link>
  <!-- NICOL fixed joint -->
  <joint name="joint_right_collision" type="fixed">
    <origin rpy="0 0 0" xyz="0.5 0.9775 0.92"/>
    <parent link="frame_link"/>
    <child link="right_collision_link"/>
  </joint>
  <!-- NICOL fixed joint -->
  <link name="right_collision_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.91 0.045 0.045"/>
      </geometry>
    </collision>
    <!-- visual not desired -->
    <!-- inertial not desired -->
  </link>
  <!-- NICOL fixed joint -->
  <joint name="joint_plate" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="frame_link"/>
    <child link="plate_link"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- NICOL link  -->
  <link name="plate_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.50000 0.0 -0.00500"/>
      <mass value="32.37865"/>
      <inertia ixx="10.70845" ixy="0.0" ixz="0.0" iyy="2.67842" iyz="0.0" izz="13.38633"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/robot_frame/plate_centered.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.5 0 -0.01"/>
      <geometry>
        <!-- drop mesh and use a box with given size arg -->
        <box size="1.0 2.0 0.02"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- append frame -->
  <!-- NICOL fixed joint -->
  <joint name="joint_neck" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.425"/>
    <parent link="base_link"/>
    <child link="neck_link"/>
  </joint>
  <!-- NICOL fixed joint -->
  <gazebo reference="face_link">
    <material>Gazebo/White</material>
  </gazebo>
  <gazebo reference="occiput_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="left_eye_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="right_eye_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="tilt_link">
    <!-- <kp>1000000.0</kp>
      <kd>100.0</kd>  -->
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <!-- <maxVel>1.0</maxVel>
      <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="neck_link">
    <!-- <kp>1000000.0</kp>
      <kd>100.0</kd>  -->
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <!-- <maxVel>1.0</maxVel>
      <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- camera plugin -->
  <gazebo reference="left_eye_cam">
    <material>Gazebo/Grey</material>
    <!-- sensor -->
    <sensor name="left_eye_cam" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="left_eye_cam">
        <visualize>False</visualize>
        <!-- real h fov: 3.52557 -->
        <horizontal_fov>2.5</horizontal_fov>
        <image>
          <width>4208</width>
          <height>3120</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                        That pixel's noise value is added to each of its color
                        channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <!-- plugin -->
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>left_eye_cam/color</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>left_eye_cam</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!-- camera plugin -->
  <gazebo reference="right_eye_cam">
    <material>Gazebo/Grey</material>
    <!-- sensor -->
    <sensor name="right_eye_cam" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="right_eye_cam">
        <visualize>False</visualize>
        <!-- real h fov: 3.52557 -->
        <horizontal_fov>2.5</horizontal_fov>
        <image>
          <width>4208</width>
          <height>3120</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                        That pixel's noise value is added to each of its color
                        channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <!-- plugin -->
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>right_eye_cam/color</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>right_eye_cam</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!-- NICOL link  -->
  <link name="neck_link">
    <inertial>
      <origin rpy="-0.00287454 0.61701874 -0.00141275" xyz="0.07075596 0.00003485 0.05658257"/>
      <mass value="0.56992762"/>
      <inertia ixx="0.00138149" ixy="0.00000062" ixz="-0.00124881" iyy="0.00307012" iyz="0.00000024" izz="0.00225589"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/head/cplt_neck_asmbly.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0.7853981633974483 0" xyz="0.09 0 0.07"/>
      <geometry>
        <!-- drop mesh and use a cylinder with given length and radius arg -->
        <cylinder length="0.13" radius="0.038"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="joint_head_z" type="revolute">
    <origin rpy="0 0 0" xyz="0.187 -0.001 0.1415"/>
    <parent link="neck_link"/>
    <child link="tilt_link"/>
    <axis xyz="0 0 1"/>
    <limit effort="120" lower="-1.5707963267948966" upper="1.5707963267948966" velocity="20"/>
    <dynamics damping="0.01" friction="0.001"/>
  </joint>
  <transmission name="tran__head_z">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_head_z">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor__head_z">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="tilt_link">
    <inertial>
      <origin rpy="-0.02892225 0.00099172 -0.00026723" xyz="-0.00010125 -0.00021463 0.02966824"/>
      <mass value="0.15019367"/>
      <inertia ixx="0.00009713" ixy="0" ixz="0.00000006" iyy="0.00008905" iyz="0.00000163" izz="0.00003278"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0.007 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/head/tilt_asmbly.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 -0.005"/>
      <geometry>
        <!-- drop mesh and use a box with given size arg -->
        <box size="0.04 0.042 0.08"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="joint_head_y" type="revolute">
    <origin rpy="0 0 0" xyz="0.007 0 0.0605"/>
    <parent link="tilt_link"/>
    <child link="face_link"/>
    <axis xyz="0 1 0"/>
    <limit effort="44.7" lower="-0.583" upper="1.282" velocity="6.5"/>
    <dynamics damping="0.01" friction="0.001"/>
  </joint>
  <transmission name="tran__head_y">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_head_y">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor__head_y">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="face_link">
    <inertial>
      <origin rpy="0.03669321 -0.04752892 -0.02711174" xyz="0.04821698 -0.00085035 0.10222200"/>
      <mass value="0.49307743"/>
      <inertia ixx="0.00367200" ixy="0.00001037" ixz="-0.00004273" iyy="0.00323317" iyz="-0.00001705" izz="0.00278485"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="-0.001 0 0.001"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/head/high_res/NICOL_1x3_centered.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.017 0 0.115"/>
      <geometry>
        <!-- drop mesh and use a cylinder with given length and radius arg -->
        <cylinder length="0.24" radius="0.128"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL fixed joint -->
  <joint name="joint_occiput" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.032"/>
    <parent link="face_link"/>
    <child link="occiput_link"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- NICOL link  -->
  <link name="occiput_link">
    <inertial>
      <origin rpy="-0.01418 -0.17910 0.00166" xyz="-0.05588 -0.00017 0.10147"/>
      <mass value="0.26649"/>
      <inertia ixx="0.00216" ixy="0.0" ixz="-0.00011" iyy="0.00124" iyz="0.0" izz="0.00160"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/head/occiput_1x3_centered.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- drop mesh and use a box with given size arg -->
        <box size="0 0 0"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL fixed joint -->
  <joint name="joint_left_eye" type="fixed">
    <origin rpy="0 0 0" xyz="0.111 0.0465 0.0985"/>
    <parent link="face_link"/>
    <child link="left_eye_link"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- NICOL link  -->
  <link name="left_eye_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.00108802 0.0 0.0"/>
      <mass value="0.00800898"/>
      <inertia ixx="0.00000044" ixy="0.0" ixz="0.0" iyy="0.00000045" iyz="0.0" izz="0.00000045"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/head/BF10M10526S132C_centered.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="profile"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- drop mesh and use a box with given size arg -->
        <box size="0 0 0"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL fixed joint -->
  <joint name="joint_left_see3cam" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="left_eye_link"/>
    <child link="left_eye_cam"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- Empty link for camera transform -->
  <link name="left_eye_cam"/>
  <!-- NICOL fixed joint -->
  <joint name="joint_right_eye" type="fixed">
    <origin rpy="0 0 0" xyz="0.111 -0.0465 0.0985"/>
    <parent link="face_link"/>
    <child link="right_eye_link"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- NICOL link  -->
  <link name="right_eye_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.00108802 0.0 0.0"/>
      <mass value="0.00800898"/>
      <inertia ixx="0.00000044" ixy="0.0" ixz="0.0" iyy="0.00000045" iyz="0.0" izz="0.00000045"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/head/BF10M10526S132C_centered.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="profile"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- drop mesh and use a box with given size arg -->
        <box size="0 0 0"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL fixed joint -->
  <joint name="joint_right_see3" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="right_eye_link"/>
    <child link="right_eye_cam"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- Empty link for camera transform -->
  <link name="right_eye_cam"/>
  <!-- NICOL fixed joint -->
  <joint name="joint_head_tool0" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.100"/>
    <parent link="face_link"/>
    <child link="head_tool0_link"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- NICOL fixed joint -->
  <joint name="joint_head_tool1" type="fixed">
    <origin rpy="0 0 0" xyz="0.22 0.0 0.100"/>
    <parent link="face_link"/>
    <child link="head_tool1_link"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- Empty link for camera transform -->
  <link name="head_tool0_link"/>
  <link name="head_tool1_link"/>
  <!-- append head -->
  <!-- NICOL fixed joint -->
  <joint name="joint_r_omp_base" type="fixed">
    <origin rpy="1.5707963267948966 0 0" xyz="-0.027 -0.0605 0.373"/>
    <parent link="base_link"/>
    <child link="r_link1"/>
  </joint>
  <!-- NICOL fixed joint -->
  <gazebo reference="r_link1">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="r_link2">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="r_link3">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="r_link4">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="r_link5">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="r_link6">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <!-- NICOL link  -->
  <link name="r_link1">
    <inertial>
      <origin rpy="0 0 0" xyz="0.000001 0 0.060920"/>
      <mass value="0.902296"/>
      <inertia ixx="0.001343" ixy="0" ixz="0" iyy="0.001345" iyz="0" izz="0.000397"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/open_manipulator/link_1_reduced.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.055"/>
      <geometry>
        <!-- drop mesh and use a box with given size arg -->
        <box size="0.055 0.055 0.13"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="r_joint1" type="revolute">
    <origin rpy="0 0 -1.5707963267948966" xyz="0 0 0.126"/>
    <parent link="r_link1"/>
    <child link="r_link2"/>
    <axis xyz="0 0 1"/>
    <limit effort="1000" lower="0" upper="2.5" velocity="6.5"/>
    <dynamics damping="0.1" friction="0"/>
  </joint>
  <transmission name="tran_r_1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_joint1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_link2">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0.000436 0.032021"/>
      <mass value="0.985121"/>
      <inertia ixx="0.001611" ixy="0" ixz="0" iyy="0.000473" iyz="0" izz="0.001599"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/open_manipulator/link_2_reduced.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 -0.002 0.033"/>
      <geometry>
        <!-- drop mesh and use a box with given size arg -->
        <box size="0.055 0.1325 0.055"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="r_joint2" type="revolute">
    <origin rpy="0 0 0" xyz="0.0 0.069 0.033"/>
    <parent link="r_link2"/>
    <child link="r_link3"/>
    <axis xyz="0 1 0"/>
    <limit effort="1000" lower="-1.5" upper="1.8" velocity="6.5"/>
    <dynamics damping="0.1" friction="0"/>
  </joint>
  <transmission name="tran_r_2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_joint2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_link3">
    <inertial>
      <origin rpy="-0.011848 -0.133044 0.017678" xyz="0.015706 -0.070340 0.199125"/>
      <mass value="1.501407"/>
      <inertia ixx="0.013723" ixy="-0.000001" ixz="-0.001527" iyy="0.012824" iyz="0.000125" izz="0.002524"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/open_manipulator/link_3_reduced.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/open_manipulator/link_3_reduced.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="r_joint3" type="revolute">
    <origin rpy="0 0 0" xyz="0.03000 -0.01150 0.26400"/>
    <parent link="r_link3"/>
    <child link="r_link4"/>
    <axis xyz="0 1 0"/>
    <limit effort="1000" lower="-2.25" upper="1.5" velocity="6.5"/>
    <dynamics damping="0.1" friction="0"/>
  </joint>
  <transmission name="tran_r_3">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_joint3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_link4">
    <inertial>
      <origin rpy="0.002216 0.017493 0.001153" xyz="0.120352 -0.057519 0.029683"/>
      <mass value="1.330903"/>
      <inertia ixx="0.001287" ixy="0.000003" ixz="-0.000060" iyy="0.004298" iyz="0.000001" izz="0.004730"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/open_manipulator/link_4_reduced.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/open_manipulator/link_4_reduced.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="r_joint4" type="revolute">
    <origin rpy="0 0 0" xyz="0.19500 -0.05750 0.03000"/>
    <parent link="r_link4"/>
    <child link="r_link5"/>
    <axis xyz="1 0 0"/>
    <limit effort="1000" lower="-2.9" upper="2.9" velocity="6.5"/>
    <dynamics damping="0.1" friction="0"/>
  </joint>
  <transmission name="tran_r_4">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_joint4">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_4">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_link5">
    <inertial>
      <origin rpy="-0.000001 0 -0.002436" xyz="0.057143 -0.002069 0"/>
      <mass value="0.449696"/>
      <inertia ixx="0.000306" ixy="0" ixz="0" iyy="0.000212" iyz="0" izz="0.000390"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/open_manipulator/link_5_reduced.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.061 0 0"/>
      <geometry>
        <!-- drop mesh and use a box with given size arg -->
        <box size="0.047 0.08 0.05"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="r_joint5" type="revolute">
    <origin rpy="0 0 0" xyz="0.06300 0.04500 0"/>
    <parent link="r_link5"/>
    <child link="r_link6"/>
    <axis xyz="0 1 0"/>
    <limit effort="1000" lower="-1.5707963267948966" upper="1.5707963267948966" velocity="6.5"/>
    <dynamics damping="0.01" friction="0"/>
  </joint>
  <transmission name="tran_r_5">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_joint5">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_5">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_link6">
    <inertial>
      <origin rpy="0 -0.000491 -0.002812" xyz="0.068686 -0.044988 -0.000034"/>
      <mass value="0.444892"/>
      <inertia ixx="0.000215" ixy="-0.000001" ixz="0" iyy="0.000443" iyz="0" izz="0.000529"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/open_manipulator/link_6_reduced.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/open_manipulator/link_6_reduced.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="r_joint6" type="revolute">
    <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0.12300 -0.04500 0"/>
    <parent link="r_link6"/>
    <child link="r_forearm"/>
    <axis xyz="0 0 1"/>
    <limit effort="1000" lower="-3.141592653589793" upper="3.141592653589793" velocity="6.5"/>
    <dynamics damping="0.01" friction="0"/>
  </joint>
  <transmission name="tran_r_6">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_joint6">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_6">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <gazebo reference="r_forearm">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="r_palm_axis">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="r_palm">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="r_Rproximal">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="r_Rmiddle">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="r_Rtip">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="r_Mproximal">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="r_Mmiddle">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="r_Mtip">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="r_Lproximal">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="r_Lmiddle">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="r_Ltip">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="r_thumb_base">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="r_Tproximal">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="r_Tmiddle">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="r_Ttip">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="r_Iproximal">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="r_Imiddle">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="r_Itip">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="r_laser">
    <sensor name="head_hokuyo_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>False</visualize>
      <update_rate>50</update_rate>
      <ray>
        <scan>
          <horizontal>
            <!-- f sample -->
            <samples>50</samples>
            <!-- num rays-->
            <resolution>0.05</resolution>
            <!-- angular range -->
            <min_angle>0</min_angle>
            <max_angle>0</max_angle>
          </horizontal>
        </scan>
        <range>
          <!-- 0.5 mm to 10 cm -->
          <min>0.0005</min>
          <max>0.1</max>
          <resolution>0.0001</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
                achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>/r_laser/scan</topicName>
        <frameName>r_laser</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- NICOL link  -->
  <link name="r_forearm">
    <inertial>
      <origin rpy="0.01474733 0.00009699 0.00005295" xyz="-0.00000106 0.00251437 0.08026613"/>
      <mass value="0.78597525"/>
      <inertia ixx="0.00156123" ixy="0.00000001" ixz="0.00000008" iyy="0.00171424" iyz="-0.00001506" izz="0.00069337"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/forearm_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/forearm_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="r_joint7" type="revolute">
    <origin rpy="1.5707963267948966 0 0" xyz="0 0 0.184"/>
    <parent link="r_forearm"/>
    <child link="r_palm_axis"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="-0.7853981633974483" upper="0.7853981633974483" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_r_7">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_joint7">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_7">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_palm_axis">
    <inertial>
      <origin rpy="0.00003493 0.00015844 0.00001195" xyz="0.00000165 -0.00903164 0.00000046"/>
      <mass value="0.04827394"/>
      <inertia ixx="0.00000933" ixy="0.0" ixz="0.0" iyy="0.00001216" iyz="0.0" izz="0.00001695"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/palm_axis_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/palm_axis_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="r_joint8" type="revolute">
    <origin rpy="0 1.5707963267948966 0" xyz="0 0 0"/>
    <parent link="r_palm_axis"/>
    <child link="r_palm"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="-0.7853981633974483" upper="0.7853981633974483" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_r_8">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_joint8">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_8">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_palm">
    <inertial>
      <!-- !dynamic include right palm inertial! -->
      <origin rpy="0.74322401 0.00696449 0.03897457" xyz="0.00099789 0.04513997 0.00198256"/>
      <mass value="0.04560097"/>
      <inertia ixx="0.00006414" ixy="-0.00000070" ixz="0.00000093" iyy="0.00003429" iyz="-0.00000070" izz="0.00003419"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/right_palm_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/right_palm_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL fixed joint -->
  <joint name="joint_r_palm_to_r_tool0" type="fixed">
    <origin rpy="0.0838954  -0.08902792 -2.92922802" xyz="-0.0011171786 0.0818708881 -0.0130285291"/>
    <parent link="r_palm"/>
    <child link="r_tool0"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- tool0 link -->
  <link name="r_tool0"/>
  <!-- NICOL fixed joint -->
  <joint name="joint_r_laser" type="fixed">
    <origin rpy="0 0 3.141592653589793" xyz="-0.00030337 0.04498324 0"/>
    <parent link="r_palm"/>
    <child link="r_laser"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- laser link -->
  <link name="r_laser"/>
  <!-- NICOL revolute joint -->
  <joint name="r_jointT0" type="revolute">
    <origin rpy="-2.32630737 -0.08846098 -0.27946053" xyz="-0.0083412575 0.0157859987 0.0379541955"/>
    <parent link="r_palm"/>
    <child link="r_thumb_base"/>
    <axis xyz="0 0 -1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_r_T0">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_jointT0">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_T0">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_thumb_base">
    <inertial>
      <origin rpy="-0.00000341 -0.00000343 0.03167803" xyz="-0.00000008 0.00000194 0.02800943"/>
      <mass value="0.00705621"/>
      <inertia ixx="0.00000058" ixy="0" ixz="0" iyy="0.00000058" iyz="0" izz="0.00000005"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/thumb_base_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- drop mesh and use a box with given size arg -->
        <box size="0 0 0"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="r_jointT1" type="revolute">
    <origin rpy="1.57079633 -1.01753528 -1.57079633" xyz="0 -0.0111644427 0.005490292"/>
    <parent link="r_thumb_base"/>
    <child link="r_Tproximal"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_r_T1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_jointT1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_T1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Tproximal">
    <inertial>
      <origin rpy="0.00064474 0.00155280 0.04587687" xyz="-0.00009888 -0.00895693 0.00000242"/>
      <mass value="0.00382508"/>
      <inertia ixx="0.00000026" ixy="-0.00000001" ixz="0" iyy="0.00000013" iyz="0" izz="0.00000023"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/thumb_phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use different mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/thumb_phalanx_col.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="r_jointT2" type="revolute">
    <origin rpy="0 0 0" xyz="0 -0.0215859928 0"/>
    <parent link="r_Tproximal"/>
    <child link="r_Tmiddle"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_r_T2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_jointT2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_T2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Tmiddle">
    <inertial>
      <origin rpy="0.00064474 0.00155280 0.04587687" xyz="-0.00009888 -0.00895693 0.00000242"/>
      <mass value="0.00382508"/>
      <inertia ixx="0.00000026" ixy="-0.00000001" ixz="0" iyy="0.00000013" iyz="0" izz="0.00000023"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/thumb_phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/thumb_phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="r_jointT3" type="revolute">
    <origin rpy="0 0 0.078" xyz="0 -0.0215859928 0"/>
    <parent link="r_Tmiddle"/>
    <child link="r_Ttip"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_r_T3">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_jointT3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_T3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Ttip">
    <inertial>
      <origin rpy="0.00079312 -0.00189814 -0.01667019" xyz="0.00016918 -0.00976203 0.00000146"/>
      <mass value="0.00431007"/>
      <inertia ixx="0.00000028" ixy="0" ixz="0" iyy="0.00000012" iyz="0" izz="0.00000026"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/tip_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/tip_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL fixed joint -->
  <joint name="r_joint_Tbumper" type="fixed">
    <origin rpy="0 0 -0.35" xyz="0.00674 -0.01638 0"/>
    <parent link="r_Ttip"/>
    <child link="r_Tbumper"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- NICOL link  -->
  <link name="r_Tbumper">
    <inertial>
      <origin rpy="-0.09823009 -0.00290701 -0.00126833" xyz="0.00075286 -0.00000285 -0.00000069"/>
      <mass value="0.00010969"/>
      <inertia ixx="0.000000001" ixy="0" ixz="0" iyy="0.000000001" iyz="0" izz="0.000000001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/sensor_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/sensor_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <gazebo reference="r_Tbumper">
    <!-- <mu1>30.0</mu1>
      <mu2>30.0</mu2>
      <fdir1>1 1 1</fdir1>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <maxVel>1.0</maxVel>
      <minDepth>0.001</minDepth>
      <dampingFactor>1</dampingFactor>
      <maxContacts>50</maxContacts> -->
    <self_collide>1</self_collide>
    <material>Gazebo/Grass</material>
    <sensor name="r_Tbumper_sensor" type="contact">
      <update_rate>15.0</update_rate>
      <visualize>False</visualize>
      <contact>
        <!-- use sdf collision name from converted urdf (suffix "_collision") -->
        <collision>r_Ttip_fixed_joint_lump__r_Tbumper_collision_1</collision>
        <topic>r_Tbumper_contact_state</topic>
      </contact>
      <plugin filename="libgazebo_ros_bumper.so" name="r_Tbumper_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>15.0</updateRate>
        <bumperTopicName>/r_Tbumper/bumper_state</bumperTopicName>
        <frameName>r_Tbumper</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- if sensor used, append respective sensor -->
  <!-- NICOL revolute joint -->
  <joint name="r_jointI1" type="revolute">
    <origin rpy="-0.08267713  0.17715231 -2.93857995" xyz="-0.0043044918 0.0812907302 0.0367863551"/>
    <parent link="r_palm"/>
    <child link="r_Iproximal"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_r_I1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_jointI1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_I1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Iproximal">
    <inertial>
      <origin rpy="0.00028099 0.00058278 0.03232242" xyz="-0.00009694 -0.01116046 0.00000050"/>
      <mass value="0.00475397"/>
      <inertia ixx="0.00000040" ixy="-0.00000001" ixz="0" iyy="0.00000016" iyz="0" izz="0.00000036"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="r_jointI2" type="revolute">
    <origin rpy="0 0 -0.015" xyz="0 -0.0258749732 0"/>
    <parent link="r_Iproximal"/>
    <child link="r_Imiddle"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_r_I2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_jointI2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_I2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Imiddle">
    <inertial>
      <origin rpy="0.00028099 0.00058278 0.03232242" xyz="-0.00009694 -0.01116046 0.00000050"/>
      <mass value="0.00475397"/>
      <inertia ixx="0.00000040" ixy="-0.00000001" ixz="0" iyy="0.00000016" iyz="0" izz="0.00000036"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="r_jointI3" type="revolute">
    <origin rpy="0 0 0" xyz="0 -0.0258749732 0"/>
    <parent link="r_Imiddle"/>
    <child link="r_Itip"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_r_I3">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_jointI3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_I3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Itip">
    <inertial>
      <origin rpy="0.00079312 -0.00189814 -0.01667019" xyz="0.00016918 -0.00976203 0.00000146"/>
      <mass value="0.00431007"/>
      <inertia ixx="0.00000028" ixy="0" ixz="0" iyy="0.00000012" iyz="0" izz="0.00000026"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/tip_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/tip_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL fixed joint -->
  <joint name="r_joint_Ibumper" type="fixed">
    <origin rpy="0 0 -0.35" xyz="0.00674 -0.01638 0"/>
    <parent link="r_Itip"/>
    <child link="r_Ibumper"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- NICOL link  -->
  <link name="r_Ibumper">
    <inertial>
      <origin rpy="-0.09823009 -0.00290701 -0.00126833" xyz="0.00075286 -0.00000285 -0.00000069"/>
      <mass value="0.00010969"/>
      <inertia ixx="0.000000001" ixy="0" ixz="0" iyy="0.000000001" iyz="0" izz="0.000000001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/sensor_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/sensor_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <gazebo reference="r_Ibumper">
    <!-- <mu1>30.0</mu1>
      <mu2>30.0</mu2>
      <fdir1>1 1 1</fdir1>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <maxVel>1.0</maxVel>
      <minDepth>0.001</minDepth>
      <dampingFactor>1</dampingFactor>
      <maxContacts>50</maxContacts> -->
    <self_collide>1</self_collide>
    <material>Gazebo/Grass</material>
    <sensor name="r_Ibumper_sensor" type="contact">
      <update_rate>15.0</update_rate>
      <visualize>False</visualize>
      <contact>
        <!-- use sdf collision name from converted urdf (suffix "_collision") -->
        <collision>r_Itip_fixed_joint_lump__r_Ibumper_collision_1</collision>
        <topic>r_Ibumper_contact_state</topic>
      </contact>
      <plugin filename="libgazebo_ros_bumper.so" name="r_Ibumper_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>15.0</updateRate>
        <bumperTopicName>/r_Ibumper/bumper_state</bumperTopicName>
        <frameName>r_Ibumper</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- if sensor used, append respective sensor -->
  <!-- NICOL revolute joint -->
  <joint name="r_jointM1" type="revolute">
    <origin rpy="0.00408466  0.08719979 -2.92246721" xyz="-0.0012008743 0.0828960623 0.0118294206"/>
    <parent link="r_palm"/>
    <child link="r_Mproximal"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_r_M1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_jointM1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_M1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Mproximal">
    <inertial>
      <origin rpy="0.00028099 0.00058278 0.03232242" xyz="-0.00009694 -0.01116046 0.00000050"/>
      <mass value="0.00475397"/>
      <inertia ixx="0.00000040" ixy="-0.00000001" ixz="0" iyy="0.00000016" iyz="0" izz="0.00000036"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="r_jointM2" type="revolute">
    <origin rpy="0 0 -0.015" xyz="0 -0.0258749732 0"/>
    <parent link="r_Mproximal"/>
    <child link="r_Mmiddle"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_r_M2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_jointM2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_M2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Mmiddle">
    <inertial>
      <origin rpy="0.00028099 0.00058278 0.03232242" xyz="-0.00009694 -0.01116046 0.00000050"/>
      <mass value="0.00475397"/>
      <inertia ixx="0.00000040" ixy="-0.00000001" ixz="0" iyy="0.00000016" iyz="0" izz="0.00000036"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="r_jointM3" type="revolute">
    <origin rpy="0 0 0" xyz="0 -0.0258749732 0"/>
    <parent link="r_Mmiddle"/>
    <child link="r_Mtip"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_r_M3">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_jointM3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_M3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Mtip">
    <inertial>
      <origin rpy="0.00079312 -0.00189814 -0.01667019" xyz="0.00016918 -0.00976203 0.00000146"/>
      <mass value="0.00431007"/>
      <inertia ixx="0.00000028" ixy="0" ixz="0" iyy="0.00000012" iyz="0" izz="0.00000026"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/tip_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/tip_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL fixed joint -->
  <joint name="r_joint_Mbumper" type="fixed">
    <origin rpy="0 0 -0.35" xyz="0.00674 -0.01638 0"/>
    <parent link="r_Mtip"/>
    <child link="r_Mbumper"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- NICOL link  -->
  <link name="r_Mbumper">
    <inertial>
      <origin rpy="-0.09823009 -0.00290701 -0.00126833" xyz="0.00075286 -0.00000285 -0.00000069"/>
      <mass value="0.00010969"/>
      <inertia ixx="0.000000001" ixy="0" ixz="0" iyy="0.000000001" iyz="0" izz="0.000000001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/sensor_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/sensor_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <gazebo reference="r_Mbumper">
    <!-- <mu1>30.0</mu1>
      <mu2>30.0</mu2>
      <fdir1>1 1 1</fdir1>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <maxVel>1.0</maxVel>
      <minDepth>0.001</minDepth>
      <dampingFactor>1</dampingFactor>
      <maxContacts>50</maxContacts> -->
    <self_collide>1</self_collide>
    <material>Gazebo/Grass</material>
    <sensor name="r_Mbumper_sensor" type="contact">
      <update_rate>15.0</update_rate>
      <visualize>False</visualize>
      <contact>
        <!-- use sdf collision name from converted urdf (suffix "_collision") -->
        <collision>r_Mtip_fixed_joint_lump__r_Mbumper_collision_1</collision>
        <topic>r_Mbumper_contact_state</topic>
      </contact>
      <plugin filename="libgazebo_ros_bumper.so" name="r_Mbumper_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>15.0</updateRate>
        <bumperTopicName>/r_Mbumper/bumper_state</bumperTopicName>
        <frameName>r_Mbumper</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- if sensor used, append respective sensor -->
  <!-- NICOL revolute joint -->
  <joint name="r_jointR1" type="revolute">
    <origin rpy="0.0838954  -0.08902792 -2.92922802" xyz="-0.0011171786 0.0818708881 -0.0130285291"/>
    <parent link="r_palm"/>
    <child link="r_Rproximal"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_r_R1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_jointR1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_R1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Rproximal">
    <inertial>
      <origin rpy="0.00028099 0.00058278 0.03232242" xyz="-0.00009694 -0.01116046 0.00000050"/>
      <mass value="0.00475397"/>
      <inertia ixx="0.00000040" ixy="-0.00000001" ixz="0" iyy="0.00000016" iyz="0" izz="0.00000036"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="r_jointR2" type="revolute">
    <origin rpy="0 0 -0.015" xyz="0 -0.0258749732 0"/>
    <parent link="r_Rproximal"/>
    <child link="r_Rmiddle"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_r_R2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_jointR2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_R2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Rmiddle">
    <inertial>
      <origin rpy="0.00028099 0.00058278 0.03232242" xyz="-0.00009694 -0.01116046 0.00000050"/>
      <mass value="0.00475397"/>
      <inertia ixx="0.00000040" ixy="-0.00000001" ixz="0" iyy="0.00000016" iyz="0" izz="0.00000036"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="r_jointR3" type="revolute">
    <origin rpy="0 0 0" xyz="0 -0.0258749732 0"/>
    <parent link="r_Rmiddle"/>
    <child link="r_Rtip"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_r_R3">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_jointR3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_R3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Rtip">
    <inertial>
      <origin rpy="0.00079312 -0.00189814 -0.01667019" xyz="0.00016918 -0.00976203 0.00000146"/>
      <mass value="0.00431007"/>
      <inertia ixx="0.00000028" ixy="0" ixz="0" iyy="0.00000012" iyz="0" izz="0.00000026"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/tip_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/tip_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL fixed joint -->
  <joint name="r_joint_Rbumper" type="fixed">
    <origin rpy="0 0 -0.35" xyz="0.00674 -0.01638 0"/>
    <parent link="r_Rtip"/>
    <child link="r_Rbumper"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- NICOL link  -->
  <link name="r_Rbumper">
    <inertial>
      <origin rpy="-0.09823009 -0.00290701 -0.00126833" xyz="0.00075286 -0.00000285 -0.00000069"/>
      <mass value="0.00010969"/>
      <inertia ixx="0.000000001" ixy="0" ixz="0" iyy="0.000000001" iyz="0" izz="0.000000001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/sensor_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/sensor_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <gazebo reference="r_Rbumper">
    <!-- <mu1>30.0</mu1>
      <mu2>30.0</mu2>
      <fdir1>1 1 1</fdir1>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <maxVel>1.0</maxVel>
      <minDepth>0.001</minDepth>
      <dampingFactor>1</dampingFactor>
      <maxContacts>50</maxContacts> -->
    <self_collide>1</self_collide>
    <material>Gazebo/Grass</material>
    <sensor name="r_Rbumper_sensor" type="contact">
      <update_rate>15.0</update_rate>
      <visualize>False</visualize>
      <contact>
        <!-- use sdf collision name from converted urdf (suffix "_collision") -->
        <collision>r_Rtip_fixed_joint_lump__r_Rbumper_collision_1</collision>
        <topic>r_Rbumper_contact_state</topic>
      </contact>
      <plugin filename="libgazebo_ros_bumper.so" name="r_Rbumper_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>15.0</updateRate>
        <bumperTopicName>/r_Rbumper/bumper_state</bumperTopicName>
        <frameName>r_Rbumper</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- if sensor used, append respective sensor -->
  <!-- NICOL revolute joint -->
  <joint name="r_jointL1" type="revolute">
    <origin rpy="0.17169385 -0.1774821  -2.95156384" xyz="-0.0031705239 0.0731417977 -0.0376310382"/>
    <parent link="r_palm"/>
    <child link="r_Lproximal"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_r_L1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_jointL1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_L1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Lproximal">
    <inertial>
      <origin rpy="0.00028099 0.00058278 0.03232242" xyz="-0.00009694 -0.01116046 0.00000050"/>
      <mass value="0.00475397"/>
      <inertia ixx="0.00000040" ixy="-0.00000001" ixz="0" iyy="0.00000016" iyz="0" izz="0.00000036"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="r_jointL2" type="revolute">
    <origin rpy="0 0 -0.015" xyz="0 -0.0258749732 0"/>
    <parent link="r_Lproximal"/>
    <child link="r_Lmiddle"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_r_L2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_jointL2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_L2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Lmiddle">
    <inertial>
      <origin rpy="0.00028099 0.00058278 0.03232242" xyz="-0.00009694 -0.01116046 0.00000050"/>
      <mass value="0.00475397"/>
      <inertia ixx="0.00000040" ixy="-0.00000001" ixz="0" iyy="0.00000016" iyz="0" izz="0.00000036"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="r_jointL3" type="revolute">
    <origin rpy="0 0 0" xyz="0 -0.0258749732 0"/>
    <parent link="r_Lmiddle"/>
    <child link="r_Ltip"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_r_L3">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="r_jointL3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_r_L3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Ltip">
    <inertial>
      <origin rpy="0.00079312 -0.00189814 -0.01667019" xyz="0.00016918 -0.00976203 0.00000146"/>
      <mass value="0.00431007"/>
      <inertia ixx="0.00000028" ixy="0" ixz="0" iyy="0.00000012" iyz="0" izz="0.00000026"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/tip_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/tip_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL fixed joint -->
  <joint name="r_joint_Lbumper" type="fixed">
    <origin rpy="0 0 -0.35" xyz="0.00674 -0.01638 0"/>
    <parent link="r_Ltip"/>
    <child link="r_Lbumper"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- NICOL link  -->
  <link name="r_Lbumper">
    <inertial>
      <origin rpy="-0.09823009 -0.00290701 -0.00126833" xyz="0.00075286 -0.00000285 -0.00000069"/>
      <mass value="0.00010969"/>
      <inertia ixx="0.000000001" ixy="0" ixz="0" iyy="0.000000001" iyz="0" izz="0.000000001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/sensor_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/sensor_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <gazebo reference="r_Lbumper">
    <!-- <mu1>30.0</mu1>
      <mu2>30.0</mu2>
      <fdir1>1 1 1</fdir1>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <maxVel>1.0</maxVel>
      <minDepth>0.001</minDepth>
      <dampingFactor>1</dampingFactor>
      <maxContacts>50</maxContacts> -->
    <self_collide>1</self_collide>
    <material>Gazebo/Grass</material>
    <sensor name="r_Lbumper_sensor" type="contact">
      <update_rate>15.0</update_rate>
      <visualize>False</visualize>
      <contact>
        <!-- use sdf collision name from converted urdf (suffix "_collision") -->
        <collision>r_Ltip_fixed_joint_lump__r_Lbumper_collision_1</collision>
        <topic>r_Lbumper_contact_state</topic>
      </contact>
      <plugin filename="libgazebo_ros_bumper.so" name="r_Lbumper_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>15.0</updateRate>
        <bumperTopicName>/r_Lbumper/bumper_state</bumperTopicName>
        <frameName>r_Lbumper</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- if sensor used, append respective sensor -->
  <!-- append RH8D unit to joint 6 -->
  <!-- append right omp -->
  <!-- NICOL fixed joint -->
  <joint name="joint_l_omp_base" type="fixed">
    <origin rpy="-1.5707963267948966 3.141592653589793 0" xyz="-0.027 0.0605 0.373"/>
    <parent link="base_link"/>
    <child link="l_link1"/>
  </joint>
  <!-- NICOL fixed joint -->
  <gazebo reference="l_link1">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="l_link2">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="l_link3">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="l_link4">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="l_link5">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="l_link6">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <!-- NICOL link  -->
  <link name="l_link1">
    <inertial>
      <origin rpy="0 0 0" xyz="0.000001 0 0.060920"/>
      <mass value="0.902296"/>
      <inertia ixx="0.001343" ixy="0" ixz="0" iyy="0.001345" iyz="0" izz="0.000397"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/open_manipulator/link_1_reduced.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.055"/>
      <geometry>
        <!-- drop mesh and use a box with given size arg -->
        <box size="0.055 0.055 0.13"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="l_joint1" type="revolute">
    <origin rpy="0 0 -1.5707963267948966" xyz="0 0 0.126"/>
    <parent link="l_link1"/>
    <child link="l_link2"/>
    <axis xyz="0 0 1"/>
    <limit effort="1000" lower="-2.5" upper="0" velocity="6.5"/>
    <dynamics damping="0.1" friction="0"/>
  </joint>
  <transmission name="tran_l_1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_joint1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_link2">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0.000436 0.032021"/>
      <mass value="0.985121"/>
      <inertia ixx="0.001611" ixy="0" ixz="0" iyy="0.000473" iyz="0" izz="0.001599"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/open_manipulator/link_2_reduced.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 -0.002 0.033"/>
      <geometry>
        <!-- drop mesh and use a box with given size arg -->
        <box size="0.055 0.1325 0.055"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="l_joint2" type="revolute">
    <origin rpy="0 0 0" xyz="0.0 0.069 0.033"/>
    <parent link="l_link2"/>
    <child link="l_link3"/>
    <axis xyz="0 1 0"/>
    <limit effort="1000" lower="-1.5" upper="1.8" velocity="6.5"/>
    <dynamics damping="0.1" friction="0"/>
  </joint>
  <transmission name="tran_l_2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_joint2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_link3">
    <inertial>
      <origin rpy="-0.011848 -0.133044 0.017678" xyz="0.015706 -0.070340 0.199125"/>
      <mass value="1.501407"/>
      <inertia ixx="0.013723" ixy="-0.000001" ixz="-0.001527" iyy="0.012824" iyz="0.000125" izz="0.002524"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/open_manipulator/link_3_reduced.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/open_manipulator/link_3_reduced.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="l_joint3" type="revolute">
    <origin rpy="0 0 0" xyz="0.03000 -0.01150 0.26400"/>
    <parent link="l_link3"/>
    <child link="l_link4"/>
    <axis xyz="0 1 0"/>
    <limit effort="1000" lower="-2.25" upper="1.5" velocity="6.5"/>
    <dynamics damping="0.1" friction="0"/>
  </joint>
  <transmission name="tran_l_3">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_joint3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_link4">
    <inertial>
      <origin rpy="0.002216 0.017493 0.001153" xyz="0.120352 -0.057519 0.029683"/>
      <mass value="1.330903"/>
      <inertia ixx="0.001287" ixy="0.000003" ixz="-0.000060" iyy="0.004298" iyz="0.000001" izz="0.004730"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/open_manipulator/link_4_reduced.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/open_manipulator/link_4_reduced.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="l_joint4" type="revolute">
    <origin rpy="0 0 0" xyz="0.19500 -0.05750 0.03000"/>
    <parent link="l_link4"/>
    <child link="l_link5"/>
    <axis xyz="1 0 0"/>
    <limit effort="1000" lower="-2.9" upper="2.9" velocity="6.5"/>
    <dynamics damping="0.1" friction="0"/>
  </joint>
  <transmission name="tran_l_4">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_joint4">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_4">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_link5">
    <inertial>
      <origin rpy="-0.000001 0 -0.002436" xyz="0.057143 -0.002069 0"/>
      <mass value="0.449696"/>
      <inertia ixx="0.000306" ixy="0" ixz="0" iyy="0.000212" iyz="0" izz="0.000390"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/open_manipulator/link_5_reduced.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.061 0 0"/>
      <geometry>
        <!-- drop mesh and use a box with given size arg -->
        <box size="0.047 0.08 0.05"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="l_joint5" type="revolute">
    <origin rpy="0 0 0" xyz="0.06300 0.04500 0"/>
    <parent link="l_link5"/>
    <child link="l_link6"/>
    <axis xyz="0 1 0"/>
    <limit effort="1000" lower="-1.5707963267948966" upper="1.5707963267948966" velocity="6.5"/>
    <dynamics damping="0.01" friction="0"/>
  </joint>
  <transmission name="tran_l_5">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_joint5">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_5">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_link6">
    <inertial>
      <origin rpy="0 -0.000491 -0.002812" xyz="0.068686 -0.044988 -0.000034"/>
      <mass value="0.444892"/>
      <inertia ixx="0.000215" ixy="-0.000001" ixz="0" iyy="0.000443" iyz="0" izz="0.000529"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/open_manipulator/link_6_reduced.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/open_manipulator/link_6_reduced.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="l_joint6" type="revolute">
    <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0.12300 -0.04500 0"/>
    <parent link="l_link6"/>
    <child link="l_forearm"/>
    <axis xyz="0 0 1"/>
    <limit effort="1000" lower="-3.141592653589793" upper="3.141592653589793" velocity="6.5"/>
    <dynamics damping="0.01" friction="0"/>
  </joint>
  <transmission name="tran_l_6">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_joint6">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_6">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <gazebo reference="l_forearm">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="l_palm_axis">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="l_palm">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="l_Rproximal">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="l_Rmiddle">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="l_Rtip">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="l_Mproximal">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="l_Mmiddle">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="l_Mtip">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="l_Lproximal">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="l_Lmiddle">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="l_Ltip">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="l_thumb_base">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="l_Tproximal">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="l_Tmiddle">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="l_Ttip">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="l_Iproximal">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="l_Imiddle">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="l_Itip">
    <!-- <kp>1000000.0</kp> -->
    <!-- <kd>100.0</kd> -->
    <!-- <mu1>30.0</mu1> -->
    <!-- <mu2>30.0</mu2> -->
    <!-- <maxVel>1.0</maxVel> -->
    <!-- <minDepth>0.001</minDepth> -->
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="l_laser">
    <sensor name="head_hokuyo_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>False</visualize>
      <update_rate>50</update_rate>
      <ray>
        <scan>
          <horizontal>
            <!-- f sample -->
            <samples>50</samples>
            <!-- num rays-->
            <resolution>0.05</resolution>
            <!-- angular range -->
            <min_angle>0</min_angle>
            <max_angle>0</max_angle>
          </horizontal>
        </scan>
        <range>
          <!-- 0.5 mm to 10 cm -->
          <min>0.0005</min>
          <max>0.1</max>
          <resolution>0.0001</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
                achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>/l_laser/scan</topicName>
        <frameName>l_laser</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- NICOL link  -->
  <link name="l_forearm">
    <inertial>
      <origin rpy="0.01474733 0.00009699 0.00005295" xyz="-0.00000106 0.00251437 0.08026613"/>
      <mass value="0.78597525"/>
      <inertia ixx="0.00156123" ixy="0.00000001" ixz="0.00000008" iyy="0.00171424" iyz="-0.00001506" izz="0.00069337"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/forearm_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/forearm_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="l_joint7" type="revolute">
    <origin rpy="1.5707963267948966 0 0" xyz="0 0 0.184"/>
    <parent link="l_forearm"/>
    <child link="l_palm_axis"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="-0.7853981633974483" upper="0.7853981633974483" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_l_7">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_joint7">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_7">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_palm_axis">
    <inertial>
      <origin rpy="0.00003493 0.00015844 0.00001195" xyz="0.00000165 -0.00903164 0.00000046"/>
      <mass value="0.04827394"/>
      <inertia ixx="0.00000933" ixy="0.0" ixz="0.0" iyy="0.00001216" iyz="0.0" izz="0.00001695"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/palm_axis_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/palm_axis_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="l_joint8" type="revolute">
    <origin rpy="0 1.5707963267948966 0" xyz="0 0 0"/>
    <parent link="l_palm_axis"/>
    <child link="l_palm"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="-0.7853981633974483" upper="0.7853981633974483" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_l_8">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_joint8">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_8">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_palm">
    <inertial>
      <!-- !dynamic include left palm inertial! -->
      <origin rpy="-0.74322401 -0.00696449 0.03897457" xyz="0.00099789 0.04513997 -0.00198256"/>
      <mass value="0.04560097"/>
      <inertia ixx="0.00006414" ixy="-0.00000070" ixz="-0.00000093" iyy="0.00003429" iyz="0.00000070" izz="0.00003419"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/left_palm_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/left_palm_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL fixed joint -->
  <joint name="joint_l_palm_to_l_tool0" type="fixed">
    <origin rpy="-0.0838954 0.08902792 -2.92922802" xyz="-0.0011171786 0.0818708881 0.0130285291"/>
    <parent link="l_palm"/>
    <child link="l_tool0"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- tool0 link -->
  <link name="l_tool0"/>
  <!-- NICOL fixed joint -->
  <joint name="joint_l_laser" type="fixed">
    <origin rpy="0 0 3.141592653589793" xyz="-0.00030337 0.04498324 0"/>
    <parent link="l_palm"/>
    <child link="l_laser"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- laser link -->
  <link name="l_laser"/>
  <!-- NICOL revolute joint -->
  <joint name="l_jointT0" type="revolute">
    <origin rpy="0.81691375 -0.05987591  2.83509995" xyz="-0.0083412575 0.0157859987 -0.0379541955"/>
    <parent link="l_palm"/>
    <child link="l_thumb_base"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_l_T0">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_jointT0">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_T0">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_thumb_base">
    <inertial>
      <origin rpy="-0.00000341 -0.00000343 0.03167803" xyz="-0.00000008 0.00000194 0.02800943"/>
      <mass value="0.00705621"/>
      <inertia ixx="0.00000058" ixy="0" ixz="0" iyy="0.00000058" iyz="0" izz="0.00000005"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/thumb_base_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- drop mesh and use a box with given size arg -->
        <box size="0 0 0"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="l_jointT1" type="revolute">
    <origin rpy="1.57079633 -1.01753528 -1.57079633" xyz="0 -0.0111644427 0.005490292"/>
    <parent link="l_thumb_base"/>
    <child link="l_Tproximal"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_l_T1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_jointT1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_T1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_Tproximal">
    <inertial>
      <origin rpy="0.00064474 0.00155280 0.04587687" xyz="-0.00009888 -0.00895693 0.00000242"/>
      <mass value="0.00382508"/>
      <inertia ixx="0.00000026" ixy="-0.00000001" ixz="0" iyy="0.00000013" iyz="0" izz="0.00000023"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/thumb_phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use different mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/thumb_phalanx_col.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="l_jointT2" type="revolute">
    <origin rpy="0 0 0" xyz="0 -0.0215859928 0"/>
    <parent link="l_Tproximal"/>
    <child link="l_Tmiddle"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_l_T2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_jointT2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_T2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_Tmiddle">
    <inertial>
      <origin rpy="0.00064474 0.00155280 0.04587687" xyz="-0.00009888 -0.00895693 0.00000242"/>
      <mass value="0.00382508"/>
      <inertia ixx="0.00000026" ixy="-0.00000001" ixz="0" iyy="0.00000013" iyz="0" izz="0.00000023"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/thumb_phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/thumb_phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="l_jointT3" type="revolute">
    <origin rpy="0 0 0.078" xyz="0 -0.0215859928 0"/>
    <parent link="l_Tmiddle"/>
    <child link="l_Ttip"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_l_T3">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_jointT3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_T3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_Ttip">
    <inertial>
      <origin rpy="0.00079312 -0.00189814 -0.01667019" xyz="0.00016918 -0.00976203 0.00000146"/>
      <mass value="0.00431007"/>
      <inertia ixx="0.00000028" ixy="0" ixz="0" iyy="0.00000012" iyz="0" izz="0.00000026"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/tip_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/tip_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL fixed joint -->
  <joint name="l_joint_Tbumper" type="fixed">
    <origin rpy="0 0 -0.35" xyz="0.00674 -0.01638 0"/>
    <parent link="l_Ttip"/>
    <child link="l_Tbumper"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- NICOL link  -->
  <link name="l_Tbumper">
    <inertial>
      <origin rpy="-0.09823009 -0.00290701 -0.00126833" xyz="0.00075286 -0.00000285 -0.00000069"/>
      <mass value="0.00010969"/>
      <inertia ixx="0.000000001" ixy="0" ixz="0" iyy="0.000000001" iyz="0" izz="0.000000001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/sensor_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/sensor_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <gazebo reference="l_Tbumper">
    <!-- <mu1>30.0</mu1>
      <mu2>30.0</mu2>
      <fdir1>1 1 1</fdir1>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <maxVel>1.0</maxVel>
      <minDepth>0.001</minDepth>
      <dampingFactor>1</dampingFactor>
      <maxContacts>50</maxContacts> -->
    <self_collide>1</self_collide>
    <material>Gazebo/Grass</material>
    <sensor name="l_Tbumper_sensor" type="contact">
      <update_rate>15.0</update_rate>
      <visualize>False</visualize>
      <contact>
        <!-- use sdf collision name from converted urdf (suffix "_collision") -->
        <collision>l_Ttip_fixed_joint_lump__l_Tbumper_collision_1</collision>
        <topic>l_Tbumper_contact_state</topic>
      </contact>
      <plugin filename="libgazebo_ros_bumper.so" name="l_Tbumper_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>15.0</updateRate>
        <bumperTopicName>/l_Tbumper/bumper_state</bumperTopicName>
        <frameName>l_Tbumper</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- if sensor used, append respective sensor -->
  <!-- NICOL revolute joint -->
  <joint name="l_jointI1" type="revolute">
    <origin rpy="0.08267713 -0.17715231 -2.93857995" xyz="-0.0043044918 0.0812907302 -0.0367863551"/>
    <parent link="l_palm"/>
    <child link="l_Iproximal"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_l_I1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_jointI1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_I1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_Iproximal">
    <inertial>
      <origin rpy="0.00028099 0.00058278 0.03232242" xyz="-0.00009694 -0.01116046 0.00000050"/>
      <mass value="0.00475397"/>
      <inertia ixx="0.00000040" ixy="-0.00000001" ixz="0" iyy="0.00000016" iyz="0" izz="0.00000036"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="l_jointI2" type="revolute">
    <origin rpy="0 0 -0.015" xyz="0 -0.0258749732 0"/>
    <parent link="l_Iproximal"/>
    <child link="l_Imiddle"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_l_I2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_jointI2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_I2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_Imiddle">
    <inertial>
      <origin rpy="0.00028099 0.00058278 0.03232242" xyz="-0.00009694 -0.01116046 0.00000050"/>
      <mass value="0.00475397"/>
      <inertia ixx="0.00000040" ixy="-0.00000001" ixz="0" iyy="0.00000016" iyz="0" izz="0.00000036"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="l_jointI3" type="revolute">
    <origin rpy="0 0 0" xyz="0 -0.0258749732 0"/>
    <parent link="l_Imiddle"/>
    <child link="l_Itip"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_l_I3">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_jointI3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_I3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_Itip">
    <inertial>
      <origin rpy="0.00079312 -0.00189814 -0.01667019" xyz="0.00016918 -0.00976203 0.00000146"/>
      <mass value="0.00431007"/>
      <inertia ixx="0.00000028" ixy="0" ixz="0" iyy="0.00000012" iyz="0" izz="0.00000026"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/tip_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/tip_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL fixed joint -->
  <joint name="l_joint_Ibumper" type="fixed">
    <origin rpy="0 0 -0.35" xyz="0.00674 -0.01638 0"/>
    <parent link="l_Itip"/>
    <child link="l_Ibumper"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- NICOL link  -->
  <link name="l_Ibumper">
    <inertial>
      <origin rpy="-0.09823009 -0.00290701 -0.00126833" xyz="0.00075286 -0.00000285 -0.00000069"/>
      <mass value="0.00010969"/>
      <inertia ixx="0.000000001" ixy="0" ixz="0" iyy="0.000000001" iyz="0" izz="0.000000001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/sensor_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/sensor_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <gazebo reference="l_Ibumper">
    <!-- <mu1>30.0</mu1>
      <mu2>30.0</mu2>
      <fdir1>1 1 1</fdir1>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <maxVel>1.0</maxVel>
      <minDepth>0.001</minDepth>
      <dampingFactor>1</dampingFactor>
      <maxContacts>50</maxContacts> -->
    <self_collide>1</self_collide>
    <material>Gazebo/Grass</material>
    <sensor name="l_Ibumper_sensor" type="contact">
      <update_rate>15.0</update_rate>
      <visualize>False</visualize>
      <contact>
        <!-- use sdf collision name from converted urdf (suffix "_collision") -->
        <collision>l_Itip_fixed_joint_lump__l_Ibumper_collision_1</collision>
        <topic>l_Ibumper_contact_state</topic>
      </contact>
      <plugin filename="libgazebo_ros_bumper.so" name="l_Ibumper_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>15.0</updateRate>
        <bumperTopicName>/l_Ibumper/bumper_state</bumperTopicName>
        <frameName>l_Ibumper</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- if sensor used, append respective sensor -->
  <!-- NICOL revolute joint -->
  <joint name="l_jointM1" type="revolute">
    <origin rpy="-0.00408466 -0.08719979 -2.92246721" xyz="-0.0012008743 0.0828960623 -0.0118294206"/>
    <parent link="l_palm"/>
    <child link="l_Mproximal"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_l_M1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_jointM1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_M1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_Mproximal">
    <inertial>
      <origin rpy="0.00028099 0.00058278 0.03232242" xyz="-0.00009694 -0.01116046 0.00000050"/>
      <mass value="0.00475397"/>
      <inertia ixx="0.00000040" ixy="-0.00000001" ixz="0" iyy="0.00000016" iyz="0" izz="0.00000036"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="l_jointM2" type="revolute">
    <origin rpy="0 0 -0.015" xyz="0 -0.0258749732 0"/>
    <parent link="l_Mproximal"/>
    <child link="l_Mmiddle"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_l_M2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_jointM2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_M2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_Mmiddle">
    <inertial>
      <origin rpy="0.00028099 0.00058278 0.03232242" xyz="-0.00009694 -0.01116046 0.00000050"/>
      <mass value="0.00475397"/>
      <inertia ixx="0.00000040" ixy="-0.00000001" ixz="0" iyy="0.00000016" iyz="0" izz="0.00000036"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="l_jointM3" type="revolute">
    <origin rpy="0 0 0" xyz="0 -0.0258749732 0"/>
    <parent link="l_Mmiddle"/>
    <child link="l_Mtip"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_l_M3">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_jointM3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_M3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_Mtip">
    <inertial>
      <origin rpy="-0.00034711 0.00251171 0.05687858" xyz="0.00012299 -0.00839198 -0.00000328"/>
      <mass value="0.00298838"/>
      <inertia ixx="0.00000020" ixy="-0.00000001" ixz="0" iyy="0.00000008" iyz="0" izz="0.00000017"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/optoforce_tip_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/optoforce_tip_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL fixed joint -->
  <joint name="l_joint_Mbumper" type="fixed">
    <origin rpy="0 0 0.175" xyz="0.004375 -0.0152 0"/>
    <parent link="l_Mtip"/>
    <child link="l_Mbumper"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- NICOL link  -->
  <link name="l_Mbumper">
    <inertial>
      <origin rpy="-0.45680125 0.00000194 0.00000041" xyz="0.00172318 0 0"/>
      <mass value="0.00023195"/>
      <inertia ixx="0.000000002" ixy="0" ixz="0" iyy="0.000000001" iyz="0" izz="0.000000001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/optoforce_sensor_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/optoforce_sensor_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <gazebo reference="l_Mbumper">
    <!-- <mu1>30.0</mu1>
      <mu2>30.0</mu2>
      <fdir1>1 1 1</fdir1>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <maxVel>1.0</maxVel>
      <minDepth>0.001</minDepth>
      <dampingFactor>1</dampingFactor>
      <maxContacts>50</maxContacts> -->
    <self_collide>1</self_collide>
    <material>Gazebo/DarkGrey</material>
    <sensor name="l_Mbumper_sensor" type="contact">
      <update_rate>15.0</update_rate>
      <visualize>False</visualize>
      <contact>
        <!-- use sdf collision name from converted urdf (suffix "_collision") -->
        <collision>l_Mtip_fixed_joint_lump__l_Mbumper_collision_1</collision>
        <topic>l_Mbumper_contact_state</topic>
      </contact>
      <plugin filename="libgazebo_ros_bumper.so" name="l_Mbumper_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>15.0</updateRate>
        <bumperTopicName>/l_Mbumper/bumper_state</bumperTopicName>
        <frameName>l_Mbumper</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- if sensor used, append respective sensor -->
  <!-- NICOL revolute joint -->
  <joint name="l_jointR1" type="revolute">
    <origin rpy="-0.0838954 0.08902792 -2.92922802" xyz="-0.0011171786 0.0818708881 0.0130285291"/>
    <parent link="l_palm"/>
    <child link="l_Rproximal"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_l_R1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_jointR1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_R1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_Rproximal">
    <inertial>
      <origin rpy="0.00028099 0.00058278 0.03232242" xyz="-0.00009694 -0.01116046 0.00000050"/>
      <mass value="0.00475397"/>
      <inertia ixx="0.00000040" ixy="-0.00000001" ixz="0" iyy="0.00000016" iyz="0" izz="0.00000036"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="l_jointR2" type="revolute">
    <origin rpy="0 0 -0.015" xyz="0 -0.0258749732 0"/>
    <parent link="l_Rproximal"/>
    <child link="l_Rmiddle"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_l_R2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_jointR2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_R2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_Rmiddle">
    <inertial>
      <origin rpy="0.00028099 0.00058278 0.03232242" xyz="-0.00009694 -0.01116046 0.00000050"/>
      <mass value="0.00475397"/>
      <inertia ixx="0.00000040" ixy="-0.00000001" ixz="0" iyy="0.00000016" iyz="0" izz="0.00000036"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="l_jointR3" type="revolute">
    <origin rpy="0 0 0" xyz="0 -0.0258749732 0"/>
    <parent link="l_Rmiddle"/>
    <child link="l_Rtip"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_l_R3">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_jointR3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_R3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_Rtip">
    <inertial>
      <origin rpy="0.00079312 -0.00189814 -0.01667019" xyz="0.00016918 -0.00976203 0.00000146"/>
      <mass value="0.00431007"/>
      <inertia ixx="0.00000028" ixy="0" ixz="0" iyy="0.00000012" iyz="0" izz="0.00000026"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/tip_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/tip_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL fixed joint -->
  <joint name="l_joint_Rbumper" type="fixed">
    <origin rpy="0 0 -0.35" xyz="0.00674 -0.01638 0"/>
    <parent link="l_Rtip"/>
    <child link="l_Rbumper"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- NICOL link  -->
  <link name="l_Rbumper">
    <inertial>
      <origin rpy="-0.09823009 -0.00290701 -0.00126833" xyz="0.00075286 -0.00000285 -0.00000069"/>
      <mass value="0.00010969"/>
      <inertia ixx="0.000000001" ixy="0" ixz="0" iyy="0.000000001" iyz="0" izz="0.000000001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/sensor_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/sensor_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <gazebo reference="l_Rbumper">
    <!-- <mu1>30.0</mu1>
      <mu2>30.0</mu2>
      <fdir1>1 1 1</fdir1>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <maxVel>1.0</maxVel>
      <minDepth>0.001</minDepth>
      <dampingFactor>1</dampingFactor>
      <maxContacts>50</maxContacts> -->
    <self_collide>1</self_collide>
    <material>Gazebo/Grass</material>
    <sensor name="l_Rbumper_sensor" type="contact">
      <update_rate>15.0</update_rate>
      <visualize>False</visualize>
      <contact>
        <!-- use sdf collision name from converted urdf (suffix "_collision") -->
        <collision>l_Rtip_fixed_joint_lump__l_Rbumper_collision_1</collision>
        <topic>l_Rbumper_contact_state</topic>
      </contact>
      <plugin filename="libgazebo_ros_bumper.so" name="l_Rbumper_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>15.0</updateRate>
        <bumperTopicName>/l_Rbumper/bumper_state</bumperTopicName>
        <frameName>l_Rbumper</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- if sensor used, append respective sensor -->
  <!-- NICOL revolute joint -->
  <joint name="l_jointL1" type="revolute">
    <origin rpy="-0.17169385 0.1774821 -2.95156384" xyz="-0.0031705239 0.0731417977 0.0376310382"/>
    <parent link="l_palm"/>
    <child link="l_Lproximal"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_l_L1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_jointL1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_L1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_Lproximal">
    <inertial>
      <origin rpy="0.00028099 0.00058278 0.03232242" xyz="-0.00009694 -0.01116046 0.00000050"/>
      <mass value="0.00475397"/>
      <inertia ixx="0.00000040" ixy="-0.00000001" ixz="0" iyy="0.00000016" iyz="0" izz="0.00000036"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="l_jointL2" type="revolute">
    <origin rpy="0 0 -0.015" xyz="0 -0.0258749732 0"/>
    <parent link="l_Lproximal"/>
    <child link="l_Lmiddle"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_l_L2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_jointL2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_L2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_Lmiddle">
    <inertial>
      <origin rpy="0.00028099 0.00058278 0.03232242" xyz="-0.00009694 -0.01116046 0.00000050"/>
      <mass value="0.00475397"/>
      <inertia ixx="0.00000040" ixy="-0.00000001" ixz="0" iyy="0.00000016" iyz="0" izz="0.00000036"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/phalanx_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="l_jointL3" type="revolute">
    <origin rpy="0 0 0" xyz="0 -0.0258749732 0"/>
    <parent link="l_Lmiddle"/>
    <child link="l_Ltip"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="0.0" upper="1.5707963267948966" velocity="10.0"/>
    <dynamics damping="0.0001" friction="0"/>
  </joint>
  <transmission name="tran_l_L3">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="l_jointL3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_l_L3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="l_Ltip">
    <inertial>
      <origin rpy="0.00079312 -0.00189814 -0.01667019" xyz="0.00016918 -0.00976203 0.00000146"/>
      <mass value="0.00431007"/>
      <inertia ixx="0.00000028" ixy="0" ixz="0" iyy="0.00000012" iyz="0" izz="0.00000026"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/tip_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/tip_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL fixed joint -->
  <joint name="l_joint_Lbumper" type="fixed">
    <origin rpy="0 0 -0.35" xyz="0.00674 -0.01638 0"/>
    <parent link="l_Ltip"/>
    <child link="l_Lbumper"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- NICOL link  -->
  <link name="l_Lbumper">
    <inertial>
      <origin rpy="-0.09823009 -0.00290701 -0.00126833" xyz="0.00075286 -0.00000285 -0.00000069"/>
      <mass value="0.00010969"/>
      <inertia ixx="0.000000001" ixy="0" ixz="0" iyy="0.000000001" iyz="0" izz="0.000000001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nias_description/meshes/RH8D/high_res/sensor_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="rh8d_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- use same mesh as for vis -->
        <mesh filename="package://nias_description/meshes/RH8D/high_res/sensor_refac.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- NICOL link  -->
  <gazebo reference="l_Lbumper">
    <!-- <mu1>30.0</mu1>
      <mu2>30.0</mu2>
      <fdir1>1 1 1</fdir1>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <maxVel>1.0</maxVel>
      <minDepth>0.001</minDepth>
      <dampingFactor>1</dampingFactor>
      <maxContacts>50</maxContacts> -->
    <self_collide>1</self_collide>
    <material>Gazebo/Grass</material>
    <sensor name="l_Lbumper_sensor" type="contact">
      <update_rate>15.0</update_rate>
      <visualize>False</visualize>
      <contact>
        <!-- use sdf collision name from converted urdf (suffix "_collision") -->
        <collision>l_Ltip_fixed_joint_lump__l_Lbumper_collision_1</collision>
        <topic>l_Lbumper_contact_state</topic>
      </contact>
      <plugin filename="libgazebo_ros_bumper.so" name="l_Lbumper_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>15.0</updateRate>
        <bumperTopicName>/l_Lbumper/bumper_state</bumperTopicName>
        <frameName>l_Lbumper</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- if sensor used, append respective sensor -->
  <!-- append RH8D unit to joint 6 -->
  <!-- append left omp -->
</robot>

